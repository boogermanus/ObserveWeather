@page "/Observations"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using ObserveWeather.Blazor.Core.ApiModels
@using ObserveWeather.Blazor.Core.Interfaces
@attribute [Authorize]
@inherits UserComponent
@rendermode InteractiveServer
@inject ILocationService LocationService

<PageTitle>Observations</PageTitle>
<h1>Observations</h1>

<div class="container">

    @if (_stations == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        foreach (var station in _stations)
        {
            <div class="card m-2">
                <div class="card-body">
                    <div class="card-title">@station.DisplayName - @station.StationId</div>
                    <div class="row m-2">
                        <div class="col-md-1">
                            <button class="btn btn-primary" @onclick="() => Delete(station)">Delete</button>
                        </div>
                    </div>
                    <div class="row">
                        <Observation UserStationModel="@station"></Observation>
                    </div>
                </div>
            </div>
        }
        
        @if (!_stations.Any())
        {
            <p><em>You have not added any stations</em></p>
        }
    }
</div>

@code {
    private IEnumerable<UserStationModel>? _stations;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _stations =
            await LocationService.GetForUserAsync(UserId);
    }

    private async Task Delete(UserStationModel model)
    {
        await LocationService.DeleteAsync(model);
        _stations = await LocationService.GetForUserAsync(UserId);
    }
}