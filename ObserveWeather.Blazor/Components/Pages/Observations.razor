@page "/Observations"
@using System.Security.Claims
@using ObserveWeather.Blazor.Core.ApiModels
@using ObserveWeather.Blazor.Core.Interfaces
@rendermode InteractiveServer
@inject IHttpContextAccessor Context
@inject ILocationService LocationService

<PageTitle>Observations</PageTitle>
<h1>Observations</h1>

<div class="container">

    @if (_stations == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        foreach (var station in _stations)
        {
            <div class="row m-2">
                <div class="col-md-2">@station.DisplayName</div>
                <div class="col-md-1">
                    <button class="btn btn-primary" @onclick="() => Delete(station)">Delete</button>
                </div>
            </div>
        }
    }
</div>

@code {
    private IEnumerable<UserStationModel>? _stations;
    private string? UserId => Context.HttpContext?.User.FindFirstValue(ClaimTypes.NameIdentifier);
    protected override async Task OnInitializedAsync()
    {
        _stations =
            await LocationService.GetForUserAsync(UserId);
    }

    private async Task Delete(UserStationModel model)
    {
        await LocationService.DeleteAsync(model);
        _stations = await LocationService.GetForUserAsync(UserId);
    }

}